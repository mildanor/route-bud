{
  "_args": [
    [
      {
        "raw": "logformat@^1.0.5",
        "scope": null,
        "escapedName": "logformat",
        "name": "logformat",
        "rawSpec": "^1.0.5",
        "spec": ">=1.0.5 <2.0.0",
        "type": "range"
      },
      "/Users/Milda/Projects/RouteBud/node_modules/ssi-logger"
    ]
  ],
  "_from": "logformat@>=1.0.5 <2.0.0",
  "_id": "logformat@1.0.6",
  "_inCache": true,
  "_location": "/logformat",
  "_nodeVersion": "4.4.7",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/logformat-1.0.6.tgz_1488311126341_0.8450131551362574"
  },
  "_npmUser": {
    "name": "tcort",
    "email": "linuxgeek@gmail.com"
  },
  "_npmVersion": "2.15.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "logformat@^1.0.5",
    "scope": null,
    "escapedName": "logformat",
    "name": "logformat",
    "rawSpec": "^1.0.5",
    "spec": ">=1.0.5 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ssi-logger"
  ],
  "_resolved": "https://registry.npmjs.org/logformat/-/logformat-1.0.6.tgz",
  "_shasum": "d3032a6548c7bbac3db0de5334dc01b701701552",
  "_shrinkwrap": null,
  "_spec": "logformat@^1.0.5",
  "_where": "/Users/Milda/Projects/RouteBud/node_modules/ssi-logger",
  "author": {
    "name": "SSi Micro Ltd",
    "email": "propellorheads@ssimicro.com"
  },
  "bugs": {
    "url": "https://github.com/ssimicro/logformat/issues"
  },
  "dependencies": {
    "lodash": "^4.13.1",
    "moment": "^2.13.0"
  },
  "description": "stringify objects into searchable strings",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "jshint": "^2.9.2",
    "mocha": "^2.5.3"
  },
  "directories": {},
  "dist": {
    "shasum": "d3032a6548c7bbac3db0de5334dc01b701701552",
    "tarball": "https://registry.npmjs.org/logformat/-/logformat-1.0.6.tgz"
  },
  "gitHead": "eb6816a45a9da8e4fc71c3fd6fa5a1fccf91d20c",
  "homepage": "https://github.com/ssimicro/logformat#readme",
  "jshintConfig": {
    "bitwise": true,
    "curly": true,
    "eqeqeq": true,
    "forin": true,
    "freeze": true,
    "globalstrict": true,
    "immed": true,
    "indent": 4,
    "moz": true,
    "newcap": true,
    "noarg": true,
    "node": true,
    "noempty": true,
    "nonew": true,
    "trailing": true,
    "undef": true,
    "smarttabs": true,
    "strict": true,
    "validthis": true,
    "globals": {
      "describe": false,
      "it": false,
      "before": false,
      "beforeEach": false,
      "after": false,
      "afterEach": false
    }
  },
  "keywords": [
    "log",
    "format",
    "stringify",
    "json",
    "object",
    "toString",
    "convert"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jeremycx",
      "email": "jeremyc@ssimicro.com"
    },
    {
      "name": "tcort",
      "email": "linuxgeek@gmail.com"
    }
  ],
  "name": "logformat",
  "optionalDependencies": {},
  "readme": "# logformat\n\nStringify objects into searchable strings.\n\n## Motivation\n\nJSON is a great format for exchanging data, but it isn't so great for\nlogging. Say I want to log the follow user request object:\n\n```\n{\n    date: '2015-11-19',\n    client: {\n        agent: 'firefox',\n        ip: '10.1.32.1'\n    },\n    server: {\n        ip: '192.168.2.222'\n    }\n}\n```\n\nIf I use the traditional `JSON.stringify()`, I get something like this:\n\n    {\"date\":\"2015-11-19\",\"client\":{\"agent\":\"firefox\",\"ip\":\"10.1.32.1\"},\"server\":{\"ip\":\"192.168.2.222\"}}\n\nThat isn't very readable and hard to [grep](https://www.gnu.org/software/grep/).\nThis library solves those problems by nicely formatting objects as `key=value` pairs:\n\n    date=2015-11-19 client.agent=firefox client.ip=10.1.32.1 server.ip=192.168.2.222\n\n## Installation\n\n    npm install --save logformat\n\n## API\n\n### logformat(any)\n\nParameters:\n\n* `any` anything you wish to stringify... booleans, strings, numbers, objects, arrays, etc.\n\nReturns:\n\n* formatted string\n\n## Example\n\n```\nvar logformat = require('logformat');\nvar fs = require('fs');\n\nconsole.log(logformat(fs.statSync('/dev/null')));\n\n// -> 'dev=287613608 mode=8630 nlink=1 uid=0 gid=0 rdev=50331650 blksize=131072 ino=303 size=0 blocks=0'\n```\n\n## Testing\n\nThere is an automated test suite:\n\n    npm test\n\n## License\n\nSee [LICENSE.md](https://github.com/ssimicro/logformat/blob/master/LICENCE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ssimicro/logformat.git"
  },
  "scripts": {
    "pretest": "jshint index.js",
    "test": "mocha -R spec"
  },
  "version": "1.0.6"
}
